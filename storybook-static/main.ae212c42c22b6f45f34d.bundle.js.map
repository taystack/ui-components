{"version":3,"file":"main.ae212c42c22b6f45f34d.bundle.js","sources":["webpack:///./src/Inputs/Filter/FilterResultText.jsx"],"sourcesContent":["import React from \"react\";\nimport { MatchFinder, Merge } from \"@taystack/js-helpers\";\nimport Color from \"../../Colors/Colors\";\n\n\nconst RenderProp = ({ prop, filter, end }) => {\n  let matchGroup = [];\n  const finder = new MatchFinder(prop, filter);\n  const Span = ({ children, style }) => (<span style={Merge({}, style)}>{children}</span>);\n  if (finder.hasMatch) {\n    const Bold = ({ children }) => (<b style={{ color: Color.blue }}>{children}</b>);\n    matchGroup = finder.matches.map((m, i) => {\n      if (m.match) {\n        return <Bold key={m.string + i}>{m.string}</Bold>;\n      }\n      return <Span key={m.string + i}>{m.string}</Span>\n    });\n  } else {\n    matchGroup.push(<Span key={prop + prop}>{prop}</Span>);\n  }\n\n  const style={marginRight: \"0.5rem\"};\n  if (end) style.marginRight = 0;\n  return (<Span key={prop} style={style}>{matchGroup}</Span>);\n};\n\nconst FilterResultText = ({ result = {}, filter = \"\", properties = [] }) => {\n  let spans = null;\n  if (properties.length) {\n    spans = properties.map((prop, i) => (\n      <RenderProp key={prop} prop={result[prop]} filter={filter} end={i + 1 === properties.length} />\n    ));\n  }\n  return (\n    <span>{spans}</span>\n  );\n};\n\nexport default FilterResultText;\n"],"mappings":"AAKA","sourceRoot":""}